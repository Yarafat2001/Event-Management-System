@page "/events/{categoryname?}"
@rendermode InteractiveServer

<div class="jumbotron jumbotron-@CategoryName-event pt-5">
    <div class="container-fluid d-flex justify-content-center">
        <h2 class="display-5 text-white bg-danger px-2 rounded-3" style="width:fit-content">
            <strong style="font-weight:600;">@(($"{CategoryName} EVENTS").ToUpper())</strong>
        </h2>
    </div>
</div>
<div class="container-fluid event-container pt-4 pb-5 bg-dark">
    <p class="h2 fw-bold text-center">Upcomming @CategoryName event</p>
    <div class="row">
        @if (UpComingEvents is not null)
            for (int i = 0; i < UpComingEvents.Count; i++)
            {
                <div class="col-lg-3 col-md-4 mb-3 px-1 card-container"
                     style="@(CurrentGroup_Up == GetGroup(i) ? "display: block;" : "display: none;")">
                    <div class="card bg-dark text-white border-secondary">
                        <div class="img-container" style="height: 12rem; overflow: hidden;">
                            <img src="@UpComingEvents[i].Image"
                                 class="card-img-top" alt="Event Image"
                                 style="width: 100%; height: 100%; object-fit: cover;">
                        </div>
                        <div class="card-body" style="height:180px">
                            <h5 class="card-title">@UpComingEvents[i].Title</h5>
                            <hr />
                            <p class="card-text">@(UpComingEvents[i].ShortDescription.Length > 48 ? UpComingEvents[i].ShortDescription.Substring(0, 48) + "..." : UpComingEvents[i].ShortDescription)</p>
                            <small class="text-end text-secondary">@UpComingEvents[i].Country - @UpComingEvents[i].StartDate</small>
                        </div>
                        <a href="/event/details/@UpComingEvents[i].Id" class="card-link p-2 text-center">Enter</a>
                        <div class="container px-2 pb-3">
                            <div class="progress bg-black">
                                <div class="progress-bar progress-bar-striped progress-bar-animated bg-danger" role="progressbar" style="width: @(processDays[i] + "%");" aria-valuemax="80">
                                </div>
                                <div class="ps-2">
                                    start in @CalcUpcommingDate(UpComingEvents[i].StartDate) days
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
    </div>
    <div class="pagination-dots text-center">
        @for (int i = 1; i <= TotalUpComingPages; i++)
        {
            int selected = i;
            string filter = "upcomming";
            <span class="dot @(CurrentGroup_Up == selected ? "active" : "")"
                  @onclick="() => ShowGroup(selected, filter)"></span>
        }
    </div>
    <hr />

    <div class="row mb-3">
        <div class="col-md-3">
            <span class="h5 fw-bold ">Other @CategoryName event</span>
        </div>
        <div class="col-md-9">
            <form class="container-fluid">
                <div class="input-group justify-content-end">
                    <input type="text" 
                           class="border-0" 
                           placeholder="Search on @(string.IsNullOrEmpty(CategoryName) ? "events" : CategoryName)." 
                           style="max-width:350px;"
                           @bind-value="SearchText"
                           @bind-value:event="oninput"
                           @onkeyup="Search">
                </div>
            </form>
        </div>
    </div>
    <div class="row overflow-x-auto">
        @if (OtherEvents is not null && OtherEvents.Count > 0)
        {
            for (int i = 0; i < OtherEvents.Count(); i++)
            {
                <div class="col-lg-3 col-md-4 mb-3 px-1 card-container"
                     style="@(CurrentGroup_All == GetGroup(i) ? "display: block;" : "display: none;")">
                    <div class="card bg-dark text-white border-secondary">
                        <div class="img-container" style="height: 12rem; overflow: hidden;">
                            <img src="@OtherEvents[i].Image"
                                 class="card-img-top" alt="Event Image"
                                 style="width: 100%; height: 100%; object-fit: cover;">
                        </div>
                        <div class="card-body" style="height:180px">
                            <h5 class="card-title">@OtherEvents[i].Title</h5>
                            <hr />
                            <p class="card-text">@(OtherEvents[i].ShortDescription.Length > 48 ? OtherEvents[i].ShortDescription.Substring(0, 48) + "..." : OtherEvents[i].ShortDescription)</p>
                            <small class="text-end text-secondary">@OtherEvents[i].Country - @OtherEvents[i].StartDate</small>
                        </div>
                        <a href="/event/details/@OtherEvents[i].Id" class="card-link p-2 text-center">Enter</a>
                    </div>
                </div>
            }
            <div class="pagination-dots text-center">
                @for (int i = 1; i <= TotalOtherPages; i++)
                {
                    int selected = i;
                    <span class="dot @(CurrentGroup_All == selected ? "active" : "")"
                          @onclick="() => ShowGroup(selected)"></span>
                }
            </div>
        }
        else
        {
            <div class="container-fluid d-flex align-items-center justify-content-center" style="height:430px;">
                <div class="text-center">
                    <h2>Event not found.</h2>
                    <img src="imgs/eventnotfound.png" style="width:350px;" />
                </div>
            </div>
            <div class="pagination-dots text-center">
                @for (int i = 1; i <= 3; i++)
                {
                    int selected = i;
                    <span class="dot"></span>
                }
            </div>
        }
    </div>

</div>

@code {
    
}